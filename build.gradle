plugins {
    id 'java-library'

    id 'maven-publish'
    id 'signing'
}

group = 'at.jddev0.lang'
version = '1.0.0-beta-03-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    api 'at.jddev0.lang:lang-interpreter:1.0.0-beta-03'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'lang-platform-api-swing'
            groupId = 'at.jddev0.lang'

            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                packaging = 'jar'

                name = 'Lang Platform API - Swing'
                description = 'LangPlatformAPI implentation of at.jddev0.lang:lang-interpreter for the Java Swing GUI library'
                url = 'https://github.com/lang-programming/lang-platform-api-swing'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'jddev0'
                        name = 'JDDev0'
                        email = 'jddev0@dorneger.at'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/lang-programming/lang-platform-api-swing.git'
                    developerConnection = 'scm:git:ssh://github.com:lang-programming/lang-platform-api-swing.git'
                    url = 'https://github.com/lang-programming/lang-platform-api-swing'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = hasProperty('publishMavenUsername')?getProperty('publishMavenUsername'):''
                password = hasProperty('publishMavenPassword')?getProperty('publishMavenPassword'):''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.withType(Sign)*.enabled = hasProperty('publishMavenUsername')